
App.jsx:

import React, { useState, useEffect } from "react";
import axios from "axios";
import Post from "./Post";
import Creation from "./Creation";
import Login from "./Login";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

import { v4 as uuidv4 } from "uuid";

const App = () => {
  const [posts, setPosts] = useState([]);
  //const [postName, setPostName] = useState([]);

  const [user, setUser] = useState(null);
  const [loginForm, setLoginForm] = useState({ username: "", password: "" });
  const [newPost, setNewPost] = useState({ name: "", parts: "" });
  const [price, setPrice] = useState(0.0);
  const [tempFilter, setTempFilter] = useState(0.0);
  const [filter, setFilter] = useState(0.0);
  const [tempUFilter, setTempUFilter] = useState("");
  const [UFilter, setUFilter] = useState("");

  //const [parts, setParts] = useState({ name: "", price: "" });
  const [rows, setRows] = useState([
    { part: "", price: 0, key: uuidv4() },
    { part: "", price: 0, key: uuidv4() },
    { part: "", price: 0, key: uuidv4() },
  ]);

  const fetchPosts = async () => {
    try {
      const response = await axios.get("http://localhost:5000/posts");
      setPosts(response.data);
    } catch (error) {
      console.error("Error fetching posts:", error);
    }
  };

  const handleLogin = async () => {
    try {
      const response = await axios.post(
        "http://localhost:5000/users/login",
        loginForm
      );
      setUser(response.data.user);
      fetchPosts();
    } catch (error) {
      console.error("Login failed:", error);
    }
  };

  const handleCreatePost = async () => {
    for (let i = 0; i < rows.length; i++) {
      console.log("i: ", i);
      console.log("PART: ", rows[i].part);
      console.log("PRICE: ", rows[i].price);
    }

    const isValid = rows.every((row) => row.part && row.price);
    if (!isValid) {
      alert("Please fill out all fields before submitting.");
      return;
    }
    //console.log("D part: " + rows[0].part);

    const values = rows.map((row) => ({
      part: row.part,
      price: row.price,
      key: uuidv4(),
    }));

    let concatenated = "";

    for (let i = 0; i < values.length; i++) {
      concatenated +=
        "Part: " + values[i].part + " Price: " + values[i].price + ",";
    }

    // const string_values = values.join();
    console.log("user_username: ", user.username);
    console.log("concatenated: ", concatenated);
    console.log("price: ", price);

    try {
      const response = await axios.post("http://localhost:5000/posts", {
        ...newPost,
        user_username: user.username,
        parts: concatenated,
        price: price,
      });
      fetchPosts();

      setRows([
        { part: "", price: 0, key: uuidv4() },
        { part: "", price: 0, key: uuidv4() },
        { part: "", price: 0, key: uuidv4() },
      ]);

      const responseString = JSON.stringify(response.status);
      console.log("Response Data:", responseString);

      if (responseString == "201") {
        toast.success("New post successfuly created!");
      } else {
        toast.error("Error in creating post!");
      }
    } catch (error) {
      console.error("Error creating post:", error);
    }
  };