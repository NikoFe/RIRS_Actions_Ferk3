import React, { useState, useEffect } from "react";
import axios from "axios";
import Post from "./Post";

const App = () => {
  const [posts, setPosts] = useState([]);
  const [user, setUser] = useState(null);
  const [loginForm, setLoginForm] = useState({ username: "", password: "" });
  const [newPost, setNewPost] = useState({ name: "", parts: "" });

  const fetchPosts = async () => {
    try {
      const response = await axios.get("http://localhost:5000/posts");
      setPosts(response.data);
    } catch (error) {
      console.error("Error fetching posts:", error);
    }
  };

  const handleLogin = async () => {
    try {
      const response = await axios.post(
        "http://localhost:5000/users/login",
        loginForm
      );
      setUser(response.data.user);
      fetchPosts();
    } catch (error) {
      console.error("Login failed:", error);
    }
  };

  const handleCreatePost = async () => {
    try {
      await axios.post("http://localhost:5000/posts", {
        ...newPost,
        user_username: user.username,
      });
      fetchPosts();
    } catch (error) {
      console.error("Error creating post:", error);
    }
  };

  const handleLogout = () => setUser(null);

  useEffect(() => {
    fetchPosts();
  }, []);

  return (
    <div>
      {user ? (
        <>
          <h1>Welcome, {user.username}</h1>
          <button onClick={handleLogout}>Logout</button>
          <h2>Create Post</h2>
          <input
            placeholder="Post Name"
            value={newPost.name}
            onChange={(e) => setNewPost({ ...newPost, name: e.target.value })}
          />
          <input
            placeholder="Parts (comma-separated)"
            value={newPost.parts}
            onChange={(e) => setNewPost({ ...newPost, parts: e.target.value })}
          />
          <button onClick={handleCreatePost}>Create Post</button>
        </>
      ) : (
        <>
          <h1>Login</h1>
          <input
            placeholder="Username"
            value={loginForm.username}
            onChange={(e) =>
              setLoginForm({ ...loginForm, username: e.target.value })
            }
          />
          <input
            placeholder="Password"
            type="password"
            value={loginForm.password}
            onChange={(e) =>
              setLoginForm({ ...loginForm, password: e.target.value })
            }
          />
          <button onClick={handleLogin}>Login</button>
        </>
      )}

      <h2>Posts</h2>
      {posts.map((post) => (
        <Post key={post.name} post={post} user={user} fetchPosts={fetchPosts} />
      ))}
    </div>
  );
};

export default App;
